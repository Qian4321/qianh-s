{"componentChunkName":"component---src-templates-blog-post-index-jsx","path":"/uniapp-openlayers/","result":{"data":{"site":{"siteMetadata":{"title":"QDS"}},"markdownRemark":{"id":"c314ad4b-6116-5925-a5b5-2cbb9d473f4a","excerpt":"1.概要 uniapp在提供了强大的多端转换功能的同时，也会极大的限制用户的操作并且为用户提供大量的bug。但对于节约成本和快速上线的app可以还是值得使用的。 2.使用openlayers 在使用openlayers的时候，和在一般的vue框架中使用没有太大的差别。但是uni-app…","html":"<h2>1.概要</h2>\n<p>uniapp在提供了强大的多端转换功能的同时，也会极大的限制用户的操作并且为用户提供大量的bug。但对于节约成本和快速上线的app可以还是值得使用的。</p>\n<hr>\n<h2>2.使用openlayers</h2>\n<p>在使用openlayers的时候，和在一般的vue框架中使用没有太大的差别。但是uni-app的一些特性会使得openlayers出现一些意外情况。</p>\n<h3>2.1问题原因</h3>\n<p>uniapp会脑残的将我们写的&#x3C;button>等标签转换为他们自带的&#x3C;uni-button>标签，同样的也会把样式中的button选择器翻译为uni-button选择器。我们的代码是放在mounted中，生成的dom中button等标签并未被翻译，但是引入的ol.css中的button选择器被翻译为了uni-button，这就导致dom找不到对应的css样式。</p>\n<h3>2.2解决方法</h3>\n<p>解决方式的主要思路就是和dom一样一起绕过uni-app的翻译阶段。在这里主要使用uni-app的renderjs。</p>\n\n        <deckgo-highlight-code language=\"javascript\"  terminal=\"carbon\" theme=\"lucario\" >\n          <code slot=\"code\">&lt;script module=&quot;openlayers&quot; lang=&quot;renderjs&quot;&gt;\n\timport {Map, View} from &#39;ol&#39;;\n\timport {Tile as TileLayer, Image as ImageLayer} from &#39;ol/layer&#39;;\n\timport {OSM, XYZ,ImageStatic } from &#39;ol/source&#39;;\n&lt;/script&gt;</code>\n        </deckgo-highlight-code>\n      \n<p>这样主要是可以直接操作dom元素，其他和普通的vue&#x3C;script>一致。这里直接操作dom就可以手动插入一个&#x3C;link>标签并将href指向ol.css,就可以绕过翻译阶段，是的样式能被正确的引用。</p>\n\n        <deckgo-highlight-code language=\"javascript\"  terminal=\"carbon\" theme=\"lucario\" >\n          <code slot=\"code\">mounted(){\n\t\t\tconst style = document.createElement(&#39;link&#39;);\n\t\t\tstyle.href = &#39;../../../static/ol.css&#39;;//自己的ol.css文件地址\n\t\t\tstyle.rel = &#39;stylesheet&#39;;\n\t\t\tstyle.type = &#39;text/css&#39;;\n\t\t\tdocument.getElementsByTagName(&#39;HEAD&#39;).item(0).appendChild(style);\n\t\t\t//初始化map等操作\n}</code>\n        </deckgo-highlight-code>\n      \n<p>其中自己的ol.css文件存放地址在我的实验中目前只能放在static文件夹中，不然会出现mime不对应的问题。具体原因还需要进一步分析。</p>\n<h2>3.结语</h2>\n<p>目前通过这种方式使用openlayers实属无奈，以后还是尽量选择目标明确的框架吧。使用中其他的只有等后面遇到再来一一排雷吧。</p>","frontmatter":{"title":"uni-app使用openlayers","date":"June 25, 2020","description":"Hello World"}}},"pageContext":{"slug":"/uniapp-openlayers/","previous":{"id":"9d1283b9-0b7c-5a3c-9755-db3354f82636","frontmatter":{"title":"学习插值(一)","tags":["gis","meteoinfolab","python","interpolate"],"date":"2020年06月04日"},"fields":{"slug":"/grid-interpolate(1)/"},"excerpt":"关于MeteoInfoLab MeotoInfoLab对于处理气象相关的工作是十分有用且高效的。MeotoInfoLab是使用的jython脚本进行开发，是一个好消息但仔细想想也很难让人接受。可以使用基本Python3的语法但无法使用丰富的cpython包，但也MatLab…"},"next":null}}}