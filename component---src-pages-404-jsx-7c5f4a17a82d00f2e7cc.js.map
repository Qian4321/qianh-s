{"version":3,"sources":["webpack:///./src/components/layout/seo.jsx","webpack:///./src/pages/404.jsx"],"names":["SEO","description","lang","meta","title","site","metaDescription","htmlAttributes","titleTemplate","name","content","property","twitter","data","location","siteTitle","pageQuery"],"mappings":"oTAYMA,EAAM,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC9BC,EAD0C,YAiB5CC,EAAkBL,GAAeI,eAAvC,YAEA,OACE,uBACEE,eAAgB,CACdL,QAEFE,MAJF,EAKEI,cAAa,QAAUH,eALzB,MAMEF,KAAM,CACJ,CACEM,KADF,cAEEC,QAASJ,GAEX,CACEK,SADF,WAEED,QAASN,GAEX,CACEO,SADF,iBAEED,QAASJ,GAEX,CACEK,SADF,UAEED,QAAQ,WAEV,CACED,KADF,eAEEC,QAAQ,WAEV,CACED,KADF,kBAEEC,QAASL,sBAAyBO,SAEpC,CACEH,KADF,gBAEEC,QAASN,GAEX,CACEK,KADF,sBAEEC,QAASJ,IA/BP,aAsCZN,eAAmB,CACjBE,KADiB,KAEjBC,KAFiB,GAGjBF,YAAY,IAUd,O,kCCzFA,kGAkBA,UAZqB,SAAC,GAAwB,IAAtBY,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACtBC,EAAYF,oBAAlB,MAEA,OACE,uBAAQC,SAAR,EAA4BV,MAAOW,GACjC,uBAAKX,MAAM,mBACX,4BAFF,aAGE,2BAJJ,6DAWK,IAAMY,EAAN","file":"component---src-pages-404-jsx-7c5f4a17a82d00f2e7cc.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.social.twitter,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/layout/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"404: Not Found\" />\n      <h1>Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}